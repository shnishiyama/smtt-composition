name:        smtt-prelude
version:     '0.1.0.0'
synopsis:    Prelude
description: Prelude for smtt-composition
category:    Prelude
author:      Nishiyama Shun
maintainer:  nishiyama@ipl.cs.uec.ac.jp
copyright:   2017 Nishiyama Shun
license:     MIT
homepage:    https://github.com/shnishiyama/smtt-composition#readme
git:         https://github.com/shnishiyama/smtt-composition

_base-dependencies: &base-dependencies
  base: '>=4.7 && <5'
  classy-prelude:

build-type: Custom
custom-setup:
  dependencies:
    <<: *base-dependencies
    Cabal: '>= 2.0'
    cabal-doctest:

ghc-options:
  # base options
  - -Wall

  # for performance
  - -funbox-strict-fields

  # for useful
  - -fprint-explicit-foralls

  # for complex codes
  - -fmax-pmcheck-iterations=5000000
  - -dcore-lint

default-extensions:
  # use classy-prelude
  - NoImplicitPrelude

  # performance supports
  - BangPatterns
  - EmptyCase
  - StrictData

  # useful syntaxes
  - Arrows
  - BinaryLiterals
  - DefaultSignatures
  # for Cabal 2.0.x
  #- DerivingStrategies
  - FlexibleContexts
  - FlexibleInstances
  - InstanceSigs
  - LambdaCase
  - MultiWayIf
  - NamedFieldPuns
  - NegativeLiterals
  - PatternSynonyms
  - RecordWildCards
  - RecursiveDo
  - StandaloneDeriving
  - TupleSections
  - ViewPatterns

  # useful derivable
  - GeneralizedNewtypeDeriving
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DeriveAnyClass

  # extensions of type systems
  - ConstraintKinds
  - DataKinds
  - FunctionalDependencies
  - GADTs
  - PolyKinds
  - RankNTypes
  - RoleAnnotations
  - ScopedTypeVariables
  - TypeApplications
  - TypeFamilies
  - TypeFamilyDependencies
  - TypeOperators

library:
  source-dirs: src
  exposed-modules:
  - SmttPrelude
  other-modules:
  - Paths_smtt_prelude
  - OrphanInstances
  dependencies:
    <<: *base-dependencies
    profunctors:
    bifunctors:
    hashable:
    vector:
    groom:
    unicode-show:
    deriving-compat:
    singletons:
    recursion-schemes:
    microlens:
    constraints:
    safe-exceptions:

tests:
  lint:
    main: Lint.hs
    source-dirs: test
    other-modules: []
    ghc-options: []
    dependencies:
      <<: *base-dependencies
      hlint:

  spec-test:
    main: Spec.hs
    source-dirs: test/specs
    ghc-options:
    - -threaded
    - -with-rtsopts=-N
    dependencies:
      <<: *base-dependencies
      smtt-prelude:
      hspec:
      QuickCheck:

  doc-test:
    main: Doctest.hs
    source-dirs: test
    other-modules:
    - Build_doctests
    ghc-options:
    - -threaded
    - -with-rtsopts=-N
    dependencies:
      <<: *base-dependencies
      doctest:
      QuickCheck:
      template-haskell:
